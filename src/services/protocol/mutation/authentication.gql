mutation get_nonce($wallet: String!, $chain: Chain) {
  createWalletNonce(input: { wallet: $wallet, chain: $chain }) {
    message
  }
}

mutation create_email_nonce($email: String!) {
  createEmailNonce(input: { email: $email }) {
    #REMOVELINE
    code
    email
  }
}

fragment login_data on LoginOutput {
  hasura_id
  protocol_id
  refresh_token
  token
}

mutation login_wallet($signature: String!, $wallet: String!) {
  loginWallet(input: { signature: $signature, wallet: $wallet }) {
    ...login_data
  }
}

mutation login_email($email: String!, $code: Float!) {
  loginEmail(input: { email: $email, code: $code }) {
    ...login_data
  }
}

mutation refresh($refresh_token: String!) {
  refreshToken(input: { refresh_token: $refresh_token }) {
    ...login_data
  }
}

mutation protocol_add_email($email: String!) {
  addEmail(email: $email) {
    #REMOVELINE
    code
    email
  }
}

mutation protocol_add_email_confirmation($email: String!, $code: Float!) {
  addEmailConfirmation(input: { email: $email, code: $code }) {
    user {
      id
    }
  }
}

mutation protocol_add_wallet($wallet: String!, $chain: Chain) {
  addWallet(input: { wallet: $wallet, chain: $chain }) {
    message
  }
}

mutation protocol_add_wallet_confirmation(
  $wallet: String!
  $chain: Chain
  $signature: String!
) {
  addWalletConfirmation(
    input: { wallet: $wallet, chain: $chain, signature: $signature }
  ) {
    id
  }
}

mutation protocol_unregister_auth_method($data: JSON!, $type: AuthType!) {
  unregisterAuthMethod(input: { data: $data, type: $type })
}

mutation protocol_migrate_auth($authId: String!, $ownerJwt: String!) {
  migrateAuthMethod(input: { authId: $authId, ownerJwt: $ownerJwt })
}
